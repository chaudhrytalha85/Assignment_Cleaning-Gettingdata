a <- available.packages()
head(rownames(a),3)
install.packages("slidify")
install.packages("KernSmooth")
library(KernSmooth)
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
plot(x,y)
library("swirl")
ls()
rm(list=ls())
swirl()
swirl()9
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4,replace = TRUE)
sample(1:6, 4,replace = TRUE)
sample(1:20, 10)
letters
LETTERS
sample(LETTERS)
flips <- sample(c(0,1), 100, prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100, , replace = TRUE, prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips$1)
sum(flips == 1)
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(n = 100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
?rpois
rpois
rpois(5, 10)
my_pois <- rep(100, rpois(5, 10))
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
dim(cars)
str(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist, xlab = "speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2)
data(mtcars)
play()
dim(mtcars)
head(cars)
head(mtcars)
str(mtcars)
nxt()
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
library(swirl)
swirl()
install_from_swirl("Getting and Cleaning Data")
swirl()
install.packages()
install.packages()
install.packages("dplyr")
library(dplyr)
library("swirl")
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
package_version(dplyr)
package_version("dplyr")
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran,ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.1.1", country == "IN")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country =="US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(c(3,5,NA,10)))
is.na(c(3,5,NA,10)))
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran, ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
str(cran3)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
arrange(cran3, correct_size = size - 1000)
arrange(cran3, correct_size = size + 1000)
mutate(cran3, correct_size = size +1000)
summarise(cran, avg_bytes = mean(size))
summarize(cran, avg_bytes = mean(size))
source('~/Desktop/Course3_Getting&CleaningData/Assignment_Cleaning&Gettingdata/run_analysis.R')
setwd("~/Desktop/Course3_Getting&CleaningData/Assignment_Cleaning&Gettingdata")
source('~/Desktop/Course3_Getting&CleaningData/Assignment_Cleaning&Gettingdata/run_analysis.R')
library(reshape2)
install.packages("reshape2")
library(reshape2)
datamelt <- melt(tidydata, id = c("Subject", "Activity"), measure.vars = c(3:81))
datamelt <- melt(tidydata, id.vars = c("Subject", "Activity"), measure.vars = c(3:81))
rm(datamelt)
datamelt <- melt(tidydata, id.vars = c("Subject", "Activity"), measure.vars = c(3:81))
tidydat2 <- dcast(datamelt, Subject + Activity ~ variable, mean)
View(tidydat2)
datamelt <- melt(act_descr, id.vars = c("Subject", "Activity"), measure.vars = c(3:81))
tidydat2 <- dcast(datamelt, Subject + Activity ~ variable, mean)
View(tidydat2)
rm(tidydat2)
rm(datamelt)
datamelt <- melt(act_descr, id.vars = c("Subject", "Activity"), measure.vars = c(3:81))
tidydat2 <- dcast(datamelt, Subject + Activity ~ variable, mean)
View(tidydat2)
source('~/Desktop/Course3_Getting&CleaningData/Assignment_Cleaning&Gettingdata/run_analysis.R')
source('~/Desktop/Course3_Getting&CleaningData/Assignment_Cleaning&Gettingdata/run_analysis.R')
View(tidydata)
act_descr
names(act_descr)
names(act_descr) <- gsub("[()]", "", names(act_descr))
names(act_descr)
names(act_descr) <- gsub("tBodyAcc-", "Body Acceleration Signal in Time Domain", names(act_descr))
names(act_descr)
names(act_descr) <- gsub("tBodyAcc-", "Body Acceleration Signal in Time Domain ", names(act_descr))
names(act_descr)
source('~/Desktop/Course3_Getting&CleaningData/Assignment_Cleaning&Gettingdata/run_analysis.R')
names(act_descr)
source('~/Desktop/Course3_Getting&CleaningData/Assignment_Cleaning&Gettingdata/run_analysis.R')
names(act_descr)
source('~/Desktop/Course3_Getting&CleaningData/Assignment_Cleaning&Gettingdata/run_analysis.R')
names(act_descr)
names(act_descr) <- gsub("tGravityAcc", "Gravity Acceleration Signal in Time Domain-", names(act_descr))
names(act_descr)
source('~/Desktop/Course3_Getting&CleaningData/Assignment_Cleaning&Gettingdata/run_analysis.R')
names(act_descr)
names(act_descr) <- gsub("tBodyAccJerk-", "Body Acceleration Jerk Signal in Time Domain ", names(act_descr))
names(act_descr)
names(act_descr) <- gsub("tBodyGyro-", "Body Gyroscopic Signal in Time Domain-", names(act_descr))
names(act_descr)
names(act_descr) <- gsub("tBodyGyroJerk-", "Body Gyroscopic Jerk Signal in Time Domain-", names(act_descr))
names(act_descr)
names(act_descr) <- gsub("tBodyAccMag-", "Magnitude of Body Acceleration Signal from (XYZ) Values-", names(act_descr))
source('~/Desktop/Course3_Getting&CleaningData/Assignment_Cleaning&Gettingdata/run_analysis.R')
names(act_descr)
names(act_descr) <- gsub("tGravityAccMag-", "Magnitude of Gravity Acceleration Signal from (XYZ) Values-", names(act_descr))
names(act_descr)
names(act_descr) <- gsub("tBodyAccJerkMag-", "Magnitude of Body Acceleration Jerk Signal from (XYZ) Values-", names(act_descr))
source('~/Desktop/Course3_Getting&CleaningData/Assignment_Cleaning&Gettingdata/run_analysis.R')
names(act_descr)
names(act_descr) <- gsub("tBodyGyroMag", "Magnitude of Body Gyroscopic Signals in Time Domain from (XYZ) Values-", names(act_descr))
names(act_descr)
names(act_descr) <- gsub("tBodyGyroJerkMag-", "Magnitude of Body Gyroscopic Jerk Signals in Time Domain from (XYZ) Values-", names(act_descr))
names(act_descr)
names(act_descr) <- gsub("fBodyAcc-", "FFT applied Body Acceleration Signals (XYZ) Values-", names(act_descr))
names(act_descr)
names(act_descr) <- gsub("fBodyAccJerk-", "FFT applied Body Acceleration Jerk Signals-", names(act_descr))
names(act_descr)
names(act_descr) <- gsub("fBodyGyro-", "FFT applied Body Gyroscopic Signals-", names(act_descr))
names(act_descr)
names(act_descr) <- gsub("fBodyAccMag", "FFT applied Magnitude of Body Acceleration Signals-", names(act_descr))
source('~/Desktop/Course3_Getting&CleaningData/Assignment_Cleaning&Gettingdata/run_analysis.R')
names(act_descr)
mean_std
features
tail(features, 100)
mean_std
source('~/Desktop/Course3_Getting&CleaningData/Assignment_Cleaning&Gettingdata/run_analysis.R')
source('~/Desktop/Course3_Getting&CleaningData/Assignment_Cleaning&Gettingdata/run_analysis.R')
View(activity_labels)
mean_std
View(tidydata)
source('~/Desktop/Course3_Getting&CleaningData/Assignment_Cleaning&Gettingdata/run_analysis.R')
shit <- read.table("tidydata.txt", header = TRUE)
View(shit)
View(tidydata)
source('~/Desktop/Course3_Getting&CleaningData/Assignment_Cleaning&Gettingdata/run_analysis.R')
source('~/Desktop/Course3_Getting&CleaningData/Assignment_Cleaning&Gettingdata/run_analysis.R')
shit <- read.table("tidydata.txt", header = TRUE)
View(shit)
